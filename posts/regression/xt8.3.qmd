---
title: 习题8.3
fig-height: 3
fig-width: 5
description: 主成分回归与偏最小二乘
---

> **数据如下表。用主成分回归方法建立模型，并与其他方法的结果进行比较。**

```{r}
# 课本所提供的数据有误，故未采用其sav文件
data = read.csv("data\\li5.5.csv")
head(data)
```

**普通最小二乘法**

```{r}
model = lm(y ~ ., data)
summary(model)
```

*回归方程为：$\hat{y}=62.4054+1.551x_1+0.510x_2+0.102x_3-0.144x_4$，回归系数大多不显著。*

**逐步回归法**

```{r}
model_step = step(model, direction="both", trace=0)
summary(model_step)
```

*删去不显著变量$x_4$，再拟合新回归模型*

```{r}
summary(lm(y ~ x1 + x2, data))
```

*回归方程为：$\hat{y}=52.5774+1.468x_1+0.6623x_2$，虽回归系数皆显著，但剔除变量过多。*

**主成分回归**

```{r}
data_scaled = data.frame(scale(data))
pr = princomp(~ x1 + x2 + x3 + x4, data_scaled)
summary(pr)
```

*前两个主成分的方差累计贡献率已达95.29%，遂对前两个主成分做普通最小二乘回归*

```{r}
data_scaled$z1 = pr$scores[, 1]
data_scaled$z2 = pr$scores[, 2]
model_pr = lm(y ~ z1 + z2 - 1, data_scaled)
pr$loadings[,1:2]
summary(model_pr)
```

```{r}
the_coef = coef(model_pr) %*% t(pr$loadings[,1:2])
```

```{r}
# 借用习题7.6中编写的unscale函数
unscale = function(data, coef){
    my_sd = \(x) (mean((x-mean(x))^2))^0.5 # 定义计算总体标准差函数my_sd
    coef_sd = apply(data[, -1], 2, my_sd)
    coef_mean = apply(data[, -1], 2, mean)
    beta_j = coef / coef_sd
    beta_0 = sum(beta_j * -coef_mean) + apply(data[, 1], 2, mean)
    names(beta_0) = "Intercept"
    return(c(beta_0, beta_j))
}
```

```{r}
#| message: false
library(dplyr)
data = tibble(data[, c(5, 1:4)])
unscale(data, the_coef) # 结果与课本不同，待解决
```

**偏最小二乘**

```{r}
#| message: false
library(pls)
model_pls = plsr(y ~ ., 
                 data=data.frame(scale(data)), 
                 validation='LOO',
                 jackknife=TRUE, 
                 method='widekernelpls')
summary(model_pls, what='all')
```

```{r}
model_pls = plsr(y ~ ., 
                 ncomp=3,
                 data=data.frame(scale(data)), 
                 validation='LOO',
                 jackknife=TRUE)
unscale(data, coef(model_pls)) # 结果与课本不同，待解决
```





