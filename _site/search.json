[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Girl with Balloon (also, Balloon Girl or Girl and Balloon) is a 2002-started London series of stencil murals by the graffiti artist Banksy, depicting a young girl with her hand extended toward a red heart-shaped balloon carried away by the wind. The locations for this work include Waterloo Bridge, and other murals were around London, though none remain there."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n         \n          Author\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n  \n\n\n\n\n\n\n\n\nA few tips for beginner.\n\n\n\n\n\n\nMay 3, 2022\n\n\nGleko Ma\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nTemplate for CUMCM.\n\n\n\n\n\n\nApr 18, 2022\n\n\nGleko Ma\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\nThis is a post with executable code.\n\n\n\n\n\n\nApr 17, 2022\n\n\nQuarto\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "Polar Axis\nFor a demonstration of a line plot on a polar axis, see Figure 1.\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n\n\n\nFigure 1: A line plot on a polar axis"
  },
  {
    "objectID": "posts/quarto-CUMCM/cumcm.html",
    "href": "posts/quarto-CUMCM/cumcm.html",
    "title": "数学建模Quarto模板",
    "section": "",
    "text": "Template for CUMCM."
  },
  {
    "objectID": "posts/quarto-CUMCM/cumcm.html#说明",
    "href": "posts/quarto-CUMCM/cumcm.html#说明",
    "title": "数学建模Quarto模板",
    "section": "说明",
    "text": "说明\n此为本文作者自制的数学建模论文模板。主要编译工具为Quarto，当前软件版本为0.93。1\n\n一、准备工作\n\n从Quato官网下载软件\n阅读官网指引并结合实际情况进行配置\n复制附录代码并创建相应文件\n结合自己实际内容对main.qmd进行修改，最后编译\n\n\n\n二、相关资料\n首要需阅读的资料当为Quato官网的Get Started部分、Guide的Authoring部分和Formats\\PDF部分。\n另：\n一份其实很短的LaTeX入门文档\n在线LaTeX公式编辑器\n使用knitr包输出各种类型的LaTeX表格\n\n\n三、附录\n\nmain.qmd\n\n---\nformat: \n  pdf:\n    template: cumcm.tex\nNO: 一\ngroup: 1707\nschool: stulink大学\n#-------------------\nname1: 蛋卷\\quad\nclass1: 成都1店\nnumber1: 1000000000\n#-------------------\nname2: 烤肉\\quad\nclass2: 成都2店\nnumber2: 1000000001\n#-------------------\nname3: 麻辣拌\nclass3: 成都3店\nnumber3: 1000000002\n#-------------------\ntime: 2022年3月\npreface: yes  # 是否显示组队信息\ntitle: \"标题\"\nabstract: |-\n  摘要部分\nkeyword: 关键字，以\" \\ \"分割\n---\n\n\n\ncumcm.tex\n\n\\documentclass[zihao = -4]{ctexart}\n\\pagestyle{plain}\n\\setlength{\\belowcaptionskip}{0.25cm}\n\\setlength{\\abovecaptionskip}{0.25cm}\n\n% Load Packages--------------------------\n\\usepackage[a4paper,vmargin=2.5cm,hmargin=2.5cm]{geometry}\n\\usepackage{graphicx}\n\\usepackage{hyperref}\n\\usepackage{titlesec}\n\\usepackage{ulem}\n\\usepackage{amsmath}\n\\usepackage{amssymb}\n\\usepackage{array}\n\\usepackage{float}\n\\usepackage{booktabs}\n\\usepackage{longtable}\n\\usepackage{xcolor}\n\\usepackage{multirow}\n\\usepackage{wrapfig}\n\\usepackage{colortbl}\n\\usepackage{pdflscape}\n\\usepackage{tabu}\n\\usepackage{threeparttable}\n\\usepackage{threeparttablex}\n\\usepackage{makecell}\n\\usepackage[section]{placeins}\n\\setCJKfamilyfont{song}[AutoFakeBold]{SimSun}\n\\newcommand*{\\song}{\\CJKfamily{song}}\n\\floatstyle{plaintop}\n\\restylefloat{table}\n\n% Pandoc Syntax Highlighting--------------\n$if(highlighting-macros)$\n$highlighting-macros$\n$endif$\n\n% Section Format--------------------------\n\\titleformat{\\section}\n  {\\zihao{4} \\heiti\\centering}\n  {}{0em}\n  {}\n  []\n\n\\titleformat{\\subsection}\n  {\\heiti}\n  {\\bfseries\\arabic{section}.\\bfseries\\arabic{subsection}}{1em}\n  {}\n  []\n  \n\\titleformat{\\subsubsection}\n  {\\heiti}\n  {\\bfseries\\arabic{section}.\\bfseries\\arabic{subsection}.\\bfseries\\arabic{subsubsection}}{1em}\n  {}\n  []\n  \n\\titleformat{\\subsubsubsection}\n  {\\heiti}\n  {\\bfseries\\arabic{section}.\\bfseries\\arabic{subsection}.\\bfseries\\arabic{subsubsection}.\\bfseries\\arabic{subsubsubsection}}{1em}\n  {}\n  []\n\n\\titleformat{\\subsubsubsubsection}\n  {\\heiti}\n  {\\bfseries\\arabic{section}.\\bfseries\\arabic{subsection}.\\bfseries\\arabic{subsubsection}.\\bfseries\\arabic{subsubsubsection}.\\bfseries\\arabic{subsubsubsubsection}}{1em}\n  {}\n  []\n  \n\\titleformat{\\subsubsubsubsubsection}\n  {\\heiti}\n  {\\bfseries\\arabic{section}.\\bfseries\\arabic{subsection}.\\bfseries\\arabic{subsubsection}.\\bfseries\\arabic{subsubsubsection}.\\bfseries\\arabic{subsubsubsubsection}.\\bfseries\\arabic{subsubsubsubsubsection}}{1em}\n  {}\n  []\n  \n\\titleformat{\\subsubsubsubsubsubsection}\n  {\\heiti}\n  {\\bfseries\\arabic{section}.\\bfseries\\arabic{subsection}.\\bfseries\\arabic{subsubsection}.\\bfseries\\arabic{subsubsubsection}.\\bfseries\\arabic{subsubsubsubsection}.\\bfseries\\arabic{subsubsubsubsubsection}.\\bfseries\\arabic{subsubsubsubsubsubsection}}{1em}\n  {}\n  []\n\n%=========================================%\n\\begin{document}\n\n% Preface---------------------------------\n$if(preface)$\n\\newpage\n\\begin{figure}[h]\n\\begin{center}\n{\\bfseries  \\song \\zihao{2} 21-22-2数学建模与数学实验}\n\\vspace{2ex}\\\\\n{\\bfseries  \\song \\zihao{2} 课程论文$NO$}\n\\end{center}\n\\end{figure}\n\n\\vspace{16ex}\n\n{\\bfseries  \\song \\zihao{4} 题目：} \\zihao{4} $title$\n\\vspace{4ex}\n\n{\\bfseries  \\song \\zihao{4} 组队编号：} \\zihao{4} $group$\n\\vspace{4ex}\n\n{\\bfseries  \\song \\zihao{4} 学生1}\n\\vspace{4ex}\n\n\\song \\zihao{4}{{\\bfseries   姓名}\\  \\zihao{4}{ \\uline{\\quad \\ $name1$\\quad \\quad \\ }\\ {\\bfseries 班级}\\ \\uline{\\quad \\ $class1$ \\quad \\ }\\ {\\bfseries 学号}\\ \\uline{\\quad \\ $number1$\\quad \\ }}\n\n$if(name2)$\n\\vspace{4ex}\n{\\bfseries  \\song \\zihao{4} 学生2}\n\\vspace{4ex}\n\n\\song \\zihao{4}{{\\bfseries  姓名}\\   \\zihao{4}{ \\uline{\\quad \\ $name2$\\quad \\quad \\ }\\ {\\bfseries 班级}\\ \\uline{\\quad \\ $class2$ \\quad \\ }\\ {\\bfseries 学号}\\ \\uline{\\quad \\ $number2$\\quad \\ }}\n$endif$\n\n$if(name3)$\n\\vspace{4ex}\n{\\bfseries  \\song \\zihao{4} 学生3}\n\\vspace{4ex}\n\n\\song \\zihao{4}{{\\bfseries   姓名}\\  \\zihao{4}{ \\uline{\\quad \\ $name3$\\quad \\quad \\ }\\ {\\bfseries 班级}\\ \\uline{\\quad \\ $class3$ \\quad \\ }\\ {\\bfseries 学号}\\ \\uline{\\quad \\ $number3$\\quad \\ }}\n$endif$\n\n\\begin{figure}[b]\n\\begin{center}\n{\\bfseries  \\song \\zihao{4} 成都工业学院}\n\\vspace{4ex}\\\\\n{\\bfseries  \\song \\zihao{4} $time$}\n\\end{center}\n\\end{figure}\n$endif$\n\n% Abstract--------------------------------\n\\newpage\n\n$if(title)$\n\\begin{center}\n{\\zihao{3} \\heiti $title$}\n\\vspace{3ex}\n$endif$\n\n{{\\heiti \\zihao{4} 摘\\quad 要}}\n\\end{center}\n\n$if(abstract)$\n$abstract$\n$endif$\n\n{\\vspace{4ex}\\noindent{\\heiti 关键词:}}\n$keyword$\n\n% Main Body-------------------------------\n\\newpage\n$body$\n\n\\end{document}\n\n\n\nqmd -> rmd（见脚注）\n\nformat: \n  pdf:\n    template: cumcm.tex\n# 修改为\noutput:\n  bookdown::pdf_document2: \n    template: cumcm.tex\n    latex_engine: xelatex"
  },
  {
    "objectID": "posts/for-python-beginner/index.html",
    "href": "posts/for-python-beginner/index.html",
    "title": "Python Tips",
    "section": "",
    "text": "A few tips for beginner."
  },
  {
    "objectID": "posts/for-python-beginner/index.html#变量和对象",
    "href": "posts/for-python-beginner/index.html#变量和对象",
    "title": "Python Tips",
    "section": "变量和对象",
    "text": "变量和对象\n\nPython中变量的实质为指针\n在Python中给变量赋值很简单，只需把变量名和要赋予的值用等号连接起来即可，例如：\n\n# 把 4赋给x\nx = 4\n\n这个赋值操作非常自然且直接，但它的本质可能跟你想的不太一样。 在很多编程语言里（例如C、R），变量都可以认为是一个盛装数据的容器。例如在C中，你可以这样写：\n\nint x = 4;\n\n这行代码的全部意思就是：你让计算机定义了一小块儿内存，名叫x，然后把值4放了进去。但是，在Python中，x = 4的意思并不是这样的。Python中的变量是一个指向内存的指针而非这块儿内存本身。下面看一个简单的例子：\n\nx = [1, 2, 3]\ny = x\nprint(y)\nx.append(4) # 给列表x添加一个 4\nprint(y)\n\n[1, 2, 3]\n[1, 2, 3, 4]\n\n\n我们只改变了x的值，y的值却也发生了相同的变化！下面对这个例子做一些延伸：\n\nx = 'Hello'\nprint(y)\n\n[1, 2, 3, 4]\n\n\n可以肯定，x的值发生了变化。而y的值却没有变。\nPython中的变量其实只是徒有虚名，它只是一个名字而已，当你调用它时，例如：调用x时，计算机就去访问x这个变量指向的那块儿内存，一看这个内存里头的值是[1, 2, 3]，于是计算机就返回给你[1, 2, 3]。然后你又执行y = x，计算机又把y指向x，一看x不是块儿内存，它只是一个指针，于是顺藤摸瓜，y就直接指向了原来的那块儿内存[1, 2, 3]。所以说这两个赋值操作其实只创建了一块儿内存，x和y共用它。当你执行x.append(4)时，计算机直接对所指向的那块儿内存进行操作，于是那块儿内存的值变为了[1, 2, 3, 4]，所以此时你再输出y的话，它所指向的值现在是[1, 2, 3, 4]，于是输出给你就是[1, 2, 3, 4]，而不是原来的[1, 2, 3]了。\n所以说，一句话，Python中x = 4不要读作“把4赋予x”，而应该读成“x指向4”。\n还记得上面的c代码吗？它是这样写的：\n\nint x = 4;\n\n你肯定发现它多了一个int，而且不加这个int它就会运行出错，所犯错误为：没有指定变量类型。但我们在Python中就可以直接这样写：x = 4，千万不要以为Python中的变量没有类型，其实只是x这个变量名没有类型，实际x所指向的内存4是有类型（int类型）的。你可以这样写：\n\nx = 4 # x是一个整数\nx = 'hello' # 现在x是一个字符串\nx = [1, 2, 3] # 现在x是一个列表\n\n在c中，一旦你声明了int x = 4，那它就是整型数字，你后面就不能再给它赋成字符串，会报错。而Python中x是一个指针，你可以让它指向任何类型的数据（当x指向其他值时，如果原来的值没有被什么变量指向，那这块儿应该就被自动清理了，我认为大概是这样，没有查过）。所以常说Python是动态语言，意思其实就是它的变量类型可变，而c就不是动态的。\n当我们说Python中的“变量”时，我们指的是什么？例如：\n\nx = 4\n\n直接说结论，我认为，x是变量、是变量名、是指针。而当我们说变量x时，我们通常想要表达的是变量名x与它所指向的那块儿内存（值为4）这个捆绑体。但它的本质其实只是一副躯壳，一个名字而已。\n\n\n一切皆为对象\nPython是一个面向对象语言，Python中一切都是对象。\n你也许正摸不着头脑：什么是面向对象？怎么到处都听说这个概念，但却从来没人站出来把它解释清楚？现在让我们试图把它弄明白。\n上一节我们讲了“变量为指针“的概念，即变量名自身不携带任何类型（int、str、float等）信息。现在看几个例子：\n\nx = 4\ntype(x)\n\nint\n\n\n\nx = 'hello'\ntype(x)\n\nstr\n\n\n\nx = 3.14159\ntype(x)\n\nfloat\n\n\n如果你已经弄明白了上节的内容，那你一定想到这里type(x)的结果其实输出的是x指向的那块儿内存的类型。一句话，Python中有类型，但类型不是绑定在变量名上，而是绑定在对象本身上的。即这里type的作用对象为那块儿内存本身。\n在Python中，对象其实指的是一个携带信息的实体，这个实体携带三种信息：值、属性和方法。值，顾名思义，你执行x = 4，那这个对象（那块儿内存）的值就为4，然后你执行：\n\nx\n\n3.14159\n\n\n很自然的，它输出了4。所以，调用对象的值很简单，直接输入即可。\n调用对象的属性和方法则需要用“.”来实现，你一定见过，例如：\n\nL = [1, 2, 3]\nL.append(100)\nprint(L)\n\n[1, 2, 3, 100]\n\n\n这里我们调用了这个对象（数据类型为列表）的所具有的方法append，不同的对象具有不同的方法，具体这个对象具有什么属性什么方法，完全依赖于这个对象是什么类型（你可能疑问，对象不就三种信息吗？怎么又跑出来一个类型？其实你可以把类型归到值里面，值的类型嘛。我个人是这么理解的）。下面给一个调用对象属性的例子：\n\nx = 4.5\nprint(x.real, \"+\", x.imag, 'i')\n\n4.5 + 0.0 i\n\n\n这里我们调用了数字型（int、float都属于数字型大类）对象的real（实部）和imag（虚部）属性，并将其以复数格式打印了出来。\n调用属性和方法的方式有什么不同呢？它们间的区别就在于，属性没有括号，直接写成x.real，而方法有括号，例如L.append(100)。下面再看一个例子：\n\nx = 4.5\nx.is_integer()\n\nFalse\n\n\n\nx = 4.0\nx.is_integer()\n\nTrue\n\n\n猜一猜上面调用了对象的属性还是方法？答案当然是方法，因为有括号！（浮点数有一个方法名叫is_integer，这个方法的作用是判断这个浮点数是不是一个整数（跟整型不是一个意思！），而上面的代码就是它的实际演示。）\n当我们说Python中一切皆为对象，请注意，我们的指的是一切，Right，一切。所以一个对象的属性和方法本身，也是一个对象。例如：\n\nx = 4.5\ntype(x.is_integer)\n\nbuiltin_function_or_method\n\n\n(发现了吗？这里x.is_integer没有括号。为什么？想象一下，如果输入type(x.is_integer())会输出什么？1)\nPython一切皆为对象的设计带来了一些非常方便的特性，以后慢慢体会。"
  },
  {
    "objectID": "posts/for-python-beginner/index.html#一切皆为对象",
    "href": "posts/for-python-beginner/index.html#一切皆为对象",
    "title": "Python Tips",
    "section": "一切皆为对象",
    "text": "一切皆为对象\nPython是一个面向对象语言，Python中一切都是对象。\n你也许正摸不着头脑：什么是面向对象？怎么到处都听说这个概念，但却从来没人站出来把它解释清楚？现在让我们试图把它弄明白。\n上一节我们讲了“变量为指针“的概念，即变量名自身不携带任何类型（int、str、float等）信息。现在看几个例子：\n\nx = 4\ntype(x)\n\nint\n\n\n\nx = 'hello'\ntype(x)\n\nstr\n\n\n\nx = 3.14159\ntype(x)\n\nfloat\n\n\n如果你已经弄明白了上节的内容，那你一定想到这里type(x)的结果其实输出的是x指向的那块儿内存的类型。一句话，Python中有类型，但类型不是绑定在变量名上，而是绑定在对象本身上的。即这里type的作用对象为那块儿内存本身。\n在Python中，对象其实指的是一个携带信息的实体，这个实体携带三钟信息：值、属性和方法"
  },
  {
    "objectID": "posts/for-python-beginner/index.html#参考资料",
    "href": "posts/for-python-beginner/index.html#参考资料",
    "title": "Python Tips",
    "section": "参考资料",
    "text": "参考资料\n[1]A Whirlwind Tour of Python by Jake VanderPlas (O’Reilly). Copyright 2016 O’Reilly Media, Inc., 978-1-491-96465-1"
  }
]