{
  "hash": "0282e267ead10bae8c7cf50fc1a6e4b6",
  "result": {
    "markdown": "---\ntitle: \"探索性数据分析 | 1st\"\nauthor: \"Gleko Ma\"\ndate: \"2022/4/22\"\ncategories: [code, analysis]\nimage: \"hello.jpg\"\nknitr: true\n---\n\nFor school work.\n\n## 示例模型的重演\n\n##### 建立数据框\n\n::: {.cell}\n\n```{.r .cell-code}\noptions(digits = 3)\ndf0 = data.frame(\n    '人均专著' = c(0.1, 0.2, 0.4, 0.9, 1.2),\n    '生师比' = c(5, 6, 7, 10, 2),\n    '科研经费' = c(5000, 6000, 7000, 10000, 400),\n    '逾期毕业率' = c(4.7, 5.6, 6.7, 2.3, 1.8)\n) # df0作为备份\ndf = df0\nprint(df)\n```\n\n::: {.cell-output-stdout}\n```\n  人均专著 生师比 科研经费 逾期毕业率\n1      0.1      5     5000        4.7\n2      0.2      6     6000        5.6\n3      0.4      7     7000        6.7\n4      0.9     10    10000        2.3\n5      1.2      2      400        1.8\n```\n:::\n:::\n\n##### 区间型属性变换\n\n变换公式：\n$$\nb_{i j}=\\left\\{\\begin{array}{ll}\n1-\\left(a_{j}^{0}-a_{i j}\\right) /\\left(a_{j}^{0}-a_{j}^{\\prime}\\right), & a_{j}^{\\prime} \\leq a_{i j}<a_{j}^{0} \\\\\n1, & a_{j}^{0} \\leq a_{i j}<a_{j}^{*} \\\\\n1-\\left(a_{i j}-a_{j}^{*}\\right) /\\left(a_{j}^{\\prime \\prime}-a_{j}^{*}\\right), & a_{j}^{*} \\leq a_{i j}<a_{j}^{\\prime \\prime} \\\\\n0, & \\text { 其他 }\n\\end{array}\\right.\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$生师比 = c(1, 1, 0.8333, 0.8333, 0)\nprint(df)\n```\n\n::: {.cell-output-stdout}\n```\n  人均专著 生师比 科研经费 逾期毕业率\n1      0.1  1.000     5000        4.7\n2      0.2  1.000     6000        5.6\n3      0.4  0.833     7000        6.7\n4      0.9  0.833    10000        2.3\n5      1.2  0.000      400        1.8\n```\n:::\n:::\n\n##### 数据标准化\n\n公式：\n$$\nb_{ij} = \\frac{a_{ij}}{\\sqrt{\\sum_{i=1}^{m}(a_{ij}-\\overline{a}_j)^2}}\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\nmom = function(col){sqrt(sum(col^2))}\nfor (i in 1:4){df[, i] = df[, i]/mom(df[, i])}\nprint(df)\n```\n\n::: {.cell-output-stdout}\n```\n  人均专著 生师比 科研经费 逾期毕业率\n1   0.0638  0.543   0.3449      0.455\n2   0.1275  0.543   0.4139      0.542\n3   0.2550  0.453   0.4829      0.648\n4   0.5738  0.453   0.6898      0.222\n5   0.7651  0.000   0.0276      0.174\n```\n:::\n:::\n\n##### 数据加权\n\n::: {.cell}\n\n```{.r .cell-code}\nw = c(0.2, 0.3, 0.4, 0.1)\nfor (i in 1:4){df[, i] = w[i]*df[, i]}\nprint(df)\n```\n\n::: {.cell-output-stdout}\n```\n  人均专著 生师比 科研经费 逾期毕业率\n1   0.0128  0.163    0.138     0.0455\n2   0.0255  0.163    0.166     0.0542\n3   0.0510  0.136    0.193     0.0648\n4   0.1148  0.136    0.276     0.0222\n5   0.1530  0.000    0.011     0.0174\n```\n:::\n:::\n\n##### 到正负理想解的距离\n\n::: {.cell}\n\n```{.r .cell-code}\ngood = c(0.1530, 0.163, 0.276, 0.0648)\nbad = c(0.0128, 0.000, 0.011, 0.0174)\ngood_d = function(row){sqrt(sum((row - good)^2))}\nbad_d = function(row){sqrt(sum((row - bad)^2))}\ndf_over = data.frame(\n    s = rep(NA, 5),\n    s0 = rep(NA, 5)\n)\nfor (i in 1:5){\n    df_over$s[i] = good_d(df[i, ])\n    df_over$s0[i] = bad_d(df[i, ])\n}\nprint(df_over)\n```\n\n::: {.cell-output-stdout}\n```\n       s    s0\n1 0.1977 0.208\n2 0.1690 0.228\n3 0.1342 0.235\n4 0.0633 0.315\n5 0.3147 0.140\n```\n:::\n:::\n\n##### 计算综合指标值\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_over$f = df_over$s0/(df_over$s + df_over$s0)\nprint(df_over)\n```\n\n::: {.cell-output-stdout}\n```\n       s    s0     f\n1 0.1977 0.208 0.513\n2 0.1690 0.228 0.574\n3 0.1342 0.235 0.637\n4 0.0633 0.315 0.832\n5 0.3147 0.140 0.308\n```\n:::\n:::\n\n故结论为：4 > 3 > 2 > 1 > 5\n\n## 探索性分析\n\n### 1. 检查变量相关性\n\n对数据中各属性间的相关性进行可视化。\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(GGally)\nggpairs(df0)\n```\n\n::: {.cell-output-display}\n![](EDA_1_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n**生师比**与**科研经费**的相关系数高达0.991。\n\n既然生师比与科研经费相关性这么高，那么现在计算一下人均科研经费：\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_avg = data.frame(\n    '人均经费' = df0$科研经费/df0$生师比\n) |> t()\nprint(df_avg)\n```\n\n::: {.cell-output-stdout}\n```\n         [,1] [,2] [,3] [,4] [,5]\n人均经费 1000 1000 1000 1000  200\n```\n:::\n:::\n\n可以清楚明白准确无误地看出来，第5行数据是个\"异类\"。\n\n让我们再回头仔细观察一下它们：\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(df0)\n```\n\n::: {.cell-output-stdout}\n```\n  人均专著 生师比 科研经费 逾期毕业率\n1      0.1      5     5000        4.7\n2      0.2      6     6000        5.6\n3      0.4      7     7000        6.7\n4      0.9     10    10000        2.3\n5      1.2      2      400        1.8\n```\n:::\n:::\n\n第五个学校虽然科研经费少，但生师比、人均专著与逾期毕业率都很理想，可以猜测此学校类型为弱工科院校，亦或者某类新型院校。数据如此理想的院校，相见恨晚，本文私自将其内定为第一名，并将其在后续分析中剔除。\n\n### 2. 消除高度相关的列\n\n既剔除了第五个院校，那么剩下四个院校的生师比与科研经费就完美符合$\\hat{y}=1000\\hat{x}$.的等式了，如此可将科研经费列剔除[^1]。\n\n于是现在剩余数据如下：\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0 = df0[-5, -3]\nprint(df0)\n```\n\n::: {.cell-output-stdout}\n```\n  人均专著 生师比 逾期毕业率\n1      0.1      5        4.7\n2      0.2      6        5.6\n3      0.4      7        6.7\n4      0.9     10        2.3\n```\n:::\n:::\n\n再对其相关性进行可视化\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(GGally)\nggpairs(df0)\n```\n\n::: {.cell-output-display}\n![](EDA_1_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n这下生师比与人均专著又展现出了极高的相关性。那么现在对这两个变量进行可视化与回归拟合：\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(df0, aes(x=`生师比`, y=`人均专著`)) + \n    geom_point(aes(x=`生师比`, y=`人均专著`)) + \n    geom_smooth(method = \"lm\")\n```\n\n::: {.cell-output-display}\n![](EDA_1_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmodel1 = lm(`人均专著` ~ `生师比`, data = df0)\nkb1 = summary(model1)[4]$coefficients\ncolnames(kb1) = c('估计值', '标准误', 't值', 'P值')\nrownames(kb1) = c('截距', '生师比')\nprint(kb1)\n```\n\n::: {.cell-output-stdout}\n```\n       估计值  标准误   t值     P值\n截距   -0.750 0.06339 -11.8 0.00707\n生师比  0.164 0.00875  18.8 0.00282\n```\n:::\n\n```{.r .cell-code}\nsummary(model1)[8]\n```\n\n::: {.cell-output-stdout}\n```\n$r.squared\n[1] 0.994\n```\n:::\n:::\n\n的确，$R^2=0.994$， 显著性水平为$0.01$，拟合的很好。回归方程：$\\hat{y} =0.164\\hat{x}-0.750$.\n\n如此，我们又可以剔除一列：人均专著。\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0 = df0[, -1]\n```\n:::\n\n现在只剩下孤零零的两列四行数据了：\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(df0)\n```\n\n::: {.cell-output-stdout}\n```\n  生师比 逾期毕业率\n1      5        4.7\n2      6        5.6\n3      7        6.7\n4     10        2.3\n```\n:::\n:::\n### 3. 师生比转换\n\n查阅相关资料[^2]，国际一流大学的生师比所在区间一般为[2, 4]，就本体所剩数据而言，无一达到。而资料中也表明，生师比在10以内都可以接受。\n\n![研究生生师比分类统计图示](SSB.jpg){fig-alt=\"研究生生师比分类统计图示\"}\n\n为确定生师比加权系数，本文根据参考资料对世界一流大学的调查统计图进行了数据复现并\n对其进行了gamma分布拟合，拟合结果其基本服从$X\\sim Ga(2.256,0.797)$，拟合效果如图\n：\n\n::: {.cell hash='EDA_1_cache/html/unnamed-chunk-15_58ba97eef63295d1385c1fc9be253583'}\n\n```{.r .cell-code}\nssb = c(10, rep(7, 2), rep(6, 3), rep(5, 7), rep(4, 9), rep(3, 15), rep(2, 18), rep(1, 12), rep(0.5, 7))\nlibrary(MASS)\nfitt = fitdistr(ssb, \"gamma\")\ndf_ga = data.frame(\n  x = rgamma(10000, shape = fitt$estimate[1], rate = fitt$estimate[2])\n)\ndf_ssb = data.frame(\n  x = ssb\n)\nggplot() + \n  geom_density(data = df_ga, aes(x), size = 1) + \n  geom_histogram(data = df_ssb, \n                 aes(x, y = ..density../1.75),\n                 alpha = 0.6) + \n  ylab(\"y\")\n```\n\n::: {.cell-output-display}\n![](EDA_1_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n于是本文决定生师比值的转换公式为：\n$$\nk_i = \\frac{p(x_i)}{\\sum_{i=1}^{4}p(x_i)}.\n$$\n$p(x)$为$X\\sim Ga(2.256,0.797)$的密度函数，k越大，代表其越可能为好学校。\n\n::: {.cell}\n\n```{.r .cell-code}\np_ssb = dgamma(c(5, 6, 7, 10), shape = fitt$estimate[1], rate = fitt$estimate[2])\n(k = p_ssb/sum(p_ssb))\n```\n\n::: {.cell-output-stdout}\n```\n[1] 0.5205 0.2950 0.1614 0.0231\n```\n:::\n:::\n\n计算后的数据变为：\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0$生师比 = k\nprint(df0)\n```\n\n::: {.cell-output-stdout}\n```\n  生师比 逾期毕业率\n1 0.5205        4.7\n2 0.2950        5.6\n3 0.1614        6.7\n4 0.0231        2.3\n```\n:::\n:::\n\n### 4. 将成本型属性转为效益性属性\n\n仅逾期毕业率为成本型属性，将其转换为“正常毕业率”，即做运算：$y = 100-x$。\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0$正常毕业率 = 100-df0$逾期毕业率\ndf0 = df0[, -2]\nprint(df0)\n```\n\n::: {.cell-output-stdout}\n```\n  生师比 正常毕业率\n1 0.5205       95.3\n2 0.2950       94.4\n3 0.1614       93.3\n4 0.0231       97.7\n```\n:::\n:::\n\n### 5. 去量纲化处理\n\n#### 变异系数法\n\n##### 变异系数法加权：\n\n$$\nw_j=\\frac{\\sigma_j}{\\overline{a}_j},\\ \\ j = 1,2\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0_a = df0\nx1 = df0_a$生师比\nx2 = df0_a$正常毕业率\nw1_a = sd(x1)/mean(x1)\nw2_a = sd(x2)/mean(x2)\n```\n:::\n\n加权公式：\n\n$$\nc_{ij} = w_j\\times a_{ij},\\ \\ i=1,2,3,4,\\ \\ j=1,2.\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0_a$生师比 = w1_a*df0_a$生师比\ndf0_a$正常毕业率 = w2_a*df0_a$正常毕业率\ndf0_a\n```\n\n::: {.cell-output-stdout}\n```\n  生师比 正常毕业率\n1 0.4409       1.87\n2 0.2499       1.86\n3 0.1367       1.83\n4 0.0196       1.92\n```\n:::\n:::\n\n##### 正负理想解与综合指标\n\n正理想解：$(0.7110,0.01009)$\\\\\n负理想解：$(0.0316,0.00964)$\n\n到正理想解的距离：\n$$\ns_i^*=\\sqrt{\\sum_{j=1}^n(c_{ij}-c_j^*)^2}\n$$\n到负理想解的距离：\n$$\ns_i^0=\\sqrt{\\sum_{j=1}^n(c_{ij}-c_j^0)^2}\n$$\n综合指标值：\n$$\nf_i^*=\\frac{s_i^0}{s_i^0+s_i^*}\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\ngood_a = c(0.7110,0.01009)\nbad_a = c(0.0316,0.00964)\ngood_d_a = function(row){sqrt(sum((row - good_a)^2))}\nbad_d_a = function(row){sqrt(sum((row - bad_a)^2))}\ndf_over_a = data.frame(\n    s = rep(NA, 4),\n    s0 = rep(NA, 4)\n)\nfor (i in 1:4){\n    df_over_a$s[i] = good_d_a(df0_a[i, ])\n    df_over_a$s0[i] = bad_d_a(df0_a[i, ])\n}\ndf_over_a$f = df_over_a$s0/(df_over_a$s + df_over_a$s0)\nprint(df_over_a)\n```\n\n::: {.cell-output-stdout}\n```\n     s   s0     f\n1 1.88 1.91 0.503\n2 1.90 1.86 0.494\n3 1.91 1.83 0.489\n4 2.03 1.91 0.485\n```\n:::\n:::\n\n最终结果：5>2>3>1>4\n\n#### 均方差法\n\n##### 均方差法加权：\n\n$$\nb_{ij}=\\frac{a_{ij}-\\overline{a}_j}{s_j}.\n$$\n其中\n$$\n\\begin{cases}\n\\begin{aligned}\n&\\overline{a}_j=\\frac{1}{m}\\sum_{i=1}^{m}a_{ij}\\\\\n&s_j=\\sqrt{\\frac{1}{m-1}\\sum_{i=1}^{m}(a_{ij}-\\overline{a}_j)^2}\\\\\n&i = 1,2,3,4,\\ \\ j = 1,2,\\ \\ m=4\\\\\n\\end{aligned}\n\\end{cases}\n$$\n\n::: {.cell}\n\n```{.r .cell-code}\ndf0_b = df0\ns = rep(NA, 2)\nfor (i in 1:2){\n  s[i] = sqrt(1/(4-1)*var(df0_b[, i]))\n  df0_b[, i] = (df0_b[, i]-mean(df0_b[, i]))/s[i]\n}\nprint(df0_b)\n```\n\n::: {.cell-output-stdout}\n```\n  生师比 正常毕业率\n1  2.213      0.116\n2  0.368     -0.717\n3 -0.725     -1.735\n4 -1.856      2.337\n```\n:::\n:::\n\n##### 正负理想解与综合指标\n\n正理想解：$(2.213,2.337)$\\\\\n负理想解：$(-1.856,-1.735)$\n\n::: {.cell}\n\n```{.r .cell-code}\ngood_b = c(2.213,2.337)\nbad_b = c(-1.856,-1.735)\ngood_d_b = function(row){sqrt(sum((row - good_b)^2))}\nbad_d_b = function(row){sqrt(sum((row - bad_b)^2))}\ndf_over_b = data.frame(\n    s = rep(NA, 4),\n    s0 = rep(NA, 4)\n)\nfor (i in 1:4){\n    df_over_b$s[i] = good_d_b(df0_b[i, ])\n    df_over_b$s0[i] = bad_d_b(df0_b[i, ])\n}\ndf_over_b$f = df_over_b$s0/(df_over_b$s + df_over_b$s0)\nprint(df_over_b)\n```\n\n::: {.cell-output-stdout}\n```\n     s   s0     f\n1 2.22 4.47 0.668\n2 3.57 2.45 0.407\n3 5.02 1.13 0.184\n4 4.07 4.07 0.500\n```\n:::\n:::\n\n最终结果：5>1>4>2>3\n\n#### 极差法\n\n##### 极差法加权\n\n$$\nb_{i j}=\\left(\\frac{a_{i j}-\\min a_{i j}}{\\max a_{i j}-\\min a_{i j}}\\right) \\times 100.\n$$\n::: {.cell}\n\n```{.r .cell-code}\ndf0_c = df0\nfor (i in 1:2){df0_c[, i] = (df0_c[, i]-min(df0_c[, i]))/(max(df0_c[, i])-min(df0_c[, i]))}\nprint(df0_c)\n```\n\n::: {.cell-output-stdout}\n```\n  生师比 正常毕业率\n1  1.000      0.455\n2  0.547      0.250\n3  0.278      0.000\n4  0.000      1.000\n```\n:::\n:::\n\n\n##### 正负理想解与综合指标\n\n正理想解：$(1,1)$\\\\\n负理想解：$(0,0)$\n\n::: {.cell}\n\n```{.r .cell-code}\ngood_c = c(1,1)\nbad_c = c(0,0)\ngood_d_c = function(row){sqrt(sum((row - good_c)^2))}\nbad_d_c = function(row){sqrt(sum((row - bad_c)^2))}\ndf_over_c = data.frame(\n    s = rep(NA, 4),\n    s0 = rep(NA, 4)\n)\nfor (i in 1:4){\n    df_over_c$s[i] = good_d_c(df0_c[i, ])\n    df_over_c$s0[i] = bad_d_c(df0_c[i, ])\n}\ndf_over_c$f = df_over_c$s0/(df_over_c$s + df_over_c$s0)\nprint(df_over_c)\n```\n\n::: {.cell-output-stdout}\n```\n      s    s0     f\n1 0.545 1.098 0.668\n2 0.876 0.601 0.407\n3 1.233 0.278 0.184\n4 1.000 1.000 0.500\n```\n:::\n:::\n\n最终结果：5>1>4>2>3\n\n#### 专家法\n\n相关资料[^3]指出，“变异系数法，均方差法都是客观赋权法……要求数据量大，否则准确性不高”，所以本文通过查阅资料了解专家的主观赋权观点，建立了基于专家法的评价模型。\n\n[^1]: 为啥可剔除？因为只取样本的充分统计量即可哇\n\n[^2]: 范哗.大众化进程中的生师比与大学质量关系——世界一流大学生师比研究的启示[J].教育发展研究,2012,32(23):8-15.DOI:10.14121/j.cnki.1008-3855.2012.23.005.\n\n[^3]: 赵静, 但琦. 数学建模与数学实验（第五版）[M]. 高等教育出版社, 北京, 2020.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": null
  }
}