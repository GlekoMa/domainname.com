{
  "hash": "0be77845335ad9951299717df7d42229",
  "result": {
    "markdown": "---\ntitle: \"Quarto Template for CUMCM\"\ndate: \"2022/4/18\"\ncategories: [news]\npage-layout: full\nimage: \"hello.jfif\"\n---\n\nLast updated: May 9 2022\n\n## 概述\n\n### 关于Quarto\n<br />\n[Quato](https://quarto.org/)是一个开源的科技出版系统，支持Jupyter、RStudio和VS Code等多种代码编辑器。其官方描述如下：\n\n- 创建代码与文本结合的可动态编译内容。支持Python、R、Julia和Observable。\n\n- 使用markdown文本或Jupyter笔记本的形式进行编译。\n\n- 渲染高质量论文、报告、幻灯片、网站、博客和书籍，并以HTML、PDF、MS Word、ePub或其他格式输出。\n\n- 支持数学公式、引文、交叉引用、图表、标注、高级布局以及其他特性。\n\n### 使用须知\n<br />\n本文主要介绍Quarto在数学建模论文排版上的应用。关于此数学建模论文模板的使用，需要声明以下几点：\n\n1. 该模板谨按照全国大学生数学建模竞赛的标准进行设计，不适用于美赛、深圳杯等其他数学建模赛事。\n\n2. 本模板仅适合对排版要求不高的朋友采用。模板主要使用LaTeX编写，由于一篇论文的编译流程大致为：ipynb/qmd -> md -> Pandoc -> PDF，层层抽象过多，故自定义排版布局对使用者相关知识的要求较高，且一旦编写格式逾矩，排错难度较大。\n\n3. 对模板的过度依赖会导致使用者个人的排版能力下降，即使理想的未来情况为内容创作者不再需要为各式样的排版劳心，但就目前来说，社会对于个人的排版能力仍然有一定要求。\n\n## 应用范例\n\n::: hello-cumcm-banner\n<ul class=\"nav nav-pills\" id=\"hello-cumcm-tab\" role=\"tablist\">\n\n<li class=\"nav-item\" role=\"presentation\">\n\n<button class=\"nav-link active\" id=\"jupyter-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#jupyter\" type=\"button\" role=\"tab\" aria-controls=\"jupyter\" aria-selected=\"true\">\n\nJupyter\n\n</button>\n\n</li>\n\n<li class=\"nav-item\" role=\"presentation\">\n\n<button class=\"nav-link\" id=\"rstudio-tab\" data-bs-toggle=\"tab\" data-bs-target=\"#rstudio\" type=\"button\" role=\"tab\" aria-controls=\"rstudio\" aria-selected=\"false\">\n\nRStudio\n\n</button>\n\n</li>\n\n</ul>\n:::\n\n::: {style=\"width:790px;overflow:auto;\"}\n::: {#hello-cumcm-tabcontent .tab-content}\n::: {#jupyter .tab-pane .fade .show .active role=\"tabpanel\" aria-labelledby=\"jupyter-tab\"}\n::: {style=\"height:500px;width:770px;overflow:auto;\"}\n\n在Jupyter中使用数学建模论文模板，只需为原Jupyter Notebook笔记本添加YAML头（raw模式），然后使用Quarto编译，即可渲染为指定论文格式。\n\n::: grid\n::: {.g-col-lg-6 .g-col-12}\n``` markdown\n=============raw代码块=============\n\n---\n#-----YAML文件-----#\ncrossref: \n  fig-prefix: 图   # 设置引用格式\n  tbl-prefix: 表\n  eq-prefix: \"\"\nformat: \n  pdf:\n    template: stulink.tex\n    keep-tex: true\n  html:\n    toc: true\n    toc-depth: 4\n    code-fold: true\n#--队伍信息及摘要页--#\nNO: 一\ngroup: 1707\nschool: stulink大学\n#-------------------\nname1: 蛋卷\nclass1: 成都1店\nnumber1: 1000000000\n#-------------------\nname2: 烤肉\nclass2: 成都2店\nnumber2: 1000000001\n#-------------------\nname3: 麻辣拌\nclass3: 成都3店\nnumber3: 1000000002\n#-------------------\ntime: 2022年3月\npreface: yes  # 是否显示组队信息\ntitle: \"暴雨将至\"\nabstract: |-\n  摘要第一段\n  \n  摘要第二段\nkeyword: 别问 \\ 问就是一只猪\n---\n\n==========Markdown代码块===========\n\n# Jupyter Demo\n\n## 基础\n\n### 数学公式\n\n#### 质能方程\n\n$$\nE = mc^2\n$$ {#eq-质能方程}\n\n#### 自动编号\n\n$$\nG = mg\n$$ {#eq-重力公式}\n\n#### 无编号公式\n\n$$\n\\text{s.t.} = \n\\begin{cases}\nx + y\\\\\nx - y\n\\end{cases}\n$$\n\n### 表格及图片\n\n#### 符号说明\n\n| 符号  | 说明        | 单位 |\n|-------|-------------|------|\n| $x_i$ | 第$i$次相遇 | 毫厘 |\n| $y_j$ | 第$j$次错过 | 千里 |\n\n: 符号说明 {#tbl-符号说明}\n\n#### MIT LOGO\n\n![麻省理工学院](mit_logo.png){fig.pos=\"H\" width=\"50%\" height=\"17.5%\"}\n\n\n#### 代码输出\n\n===========Python代码块============\n\n#| echo: false\n#| fig.pos: \"b\"\n#| label: fig-螺旋\n#| fig-cap: \"螺旋图\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n\n==========Markdown代码块===========\n\n## 引用\n\n引用质能方程([-@eq-质能方程])、符号说明[-@tbl-符号说明]、螺旋图[-@fig-螺旋]。\n```\n:::\n\n::: {.hello-output .g-col-lg-6 .g-col-12}\n![](images/jupyter-output.png)\n:::\n:::\n:::\n:::\n\n::: {#rstudio .tab-pane .fade role=\"tabpanel\" aria-labelledby=\"rstudio-tab\"}\n::: {style=\"height:500px;width:770px;overflow:auto;\"}\nRStudio为数学公式的输入提供了可视化。分为Source和Visual两种编辑模式，其中Visual模式提供了一些插件以便捷插入图表、代码块等。\n\n::: grid\n::: {.g-col-lg-6 .g-col-12}\n````markdown\n---\n#------YAML文件------#\ncrossref: \n  fig-prefix: 图   # 设置引用格式\n  tbl-prefix: 表\n  eq-prefix: \"\"\nformat: \n  pdf:\n    template: stulink.tex\n    keep-tex: true\n  html:\n    toc: true\n    toc-depth: 4\n    code-fold: true\n#--队伍信息及摘要页--#\nNO: 一\ngroup: 1707\nschool: stulink大学\n#---------------------\nname1: 蛋卷\nclass1: 成都1店\nnumber1: 1000000000\n#---------------------\nname2: 烤肉\nclass2: 成都2店\nnumber2: 1000000001\n#---------------------\nname3: 麻辣拌\nclass3: 成都3店\nnumber3: 1000000002\n#---------------------\ntime: 2022年3月\npreface: yes  # 是否显示组队信息\ntitle: \"暴雨将至\"\nabstract: |-\n  摘要第一段\n  \n  摘要第二段\nkeyword: 别问 \\ 问就是一只猪\n---\n\n# Jupyter Demo\n\n## 基础\n\n### 数学公式\n\n#### 质能方程\n\n$$\nE = mc^2\n$$ {#eq-质能方程}\n\n#### 自动编号\n\n$$\nG = mg\n$$ {#eq-重力公式}\n\n#### 无编号公式\n\n$$\n\\text{s.t.} = \n\\begin{cases}\nx + y\\\\\nx - y\n\\end{cases}\n$$\n\n### 表格及图片\n\n#### 符号说明\n\n| 符号  | 说明        | 单位 |\n|-------|-------------|------|\n| $x_i$ | 第$i$次相遇 | 毫厘 |\n| $y_j$ | 第$j$次错过 | 千里 |\n\n: 符号说明 {#tbl-符号说明}\n\n#### MIT LOGO\n\n![麻省理工学院](mit_logo.png){fig.pos=\"H\" width=\"50%\" height=\"17.5%\"}\n\n#### R代码输出\n\n```{{r}}\n#| echo: false\n#| fig.pos: H\n#| label: fig-空气质量\n#| fig-cap: 温度与臭氧浓度\n#| warning: false\n\nlibrary(ggplot2)\n\nggplot(airquality, aes(Temp, Ozone)) + \n  geom_point() + \n  geom_smooth(method = \"loess\"\n)\n```\n\n#### Python代码输出\n\n```{{python}}\n#| echo: false\n#| fig.pos: H\n#| label: fig-螺旋\n#| fig-cap: \"螺旋图\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr0 = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r0\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r0)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n\\newpage\n\n#### Python与R的相互调用\n\n\\indent\n\n```{{r}}\n# R代码\ndf = data.frame(\n  \"a\" = 1:3,\n  \"b\" = 4:6\n)\ndf[[\"a\"]]\n```\n\n```{{python}}\n# Python代码\nimport numpy as np\ndata = r.df\ndata[[\"a\"]]\n```\n\n## 引用\n\n引用质能方程([-@eq-质能方程])、符号说明[-@tbl-符号说明]、空气质量图[-@fig-空气质量]。\n````\n:::\n\n::: {.hello-output .g-col-lg-6 .g-col-12}\n![](images/rstudio-output.png)\n:::\n\n:::\n:::\n:::\n:::\n:::\n\n## 使用指南\n\n### 准备工作\n<br />\n\n1. 从[Quato](https://quarto.org/)官网下载并安装软件\n\n2. 使用终端（Terminal）执行命令：\n````markdown\nquarto tools install tinytex\n````\n\n3. 把以下路径加入环境变量：\n``` bash\n# 注意改成你的用户名\nC:\\Users\\用户名\\AppData\\Roaming\\TinyTeX\\bin\\win32\n```\n\n### 选择编辑器\n\n::: {.grid .step .column-page-left}\n::: {.tool .g-col-lg-12 .g-col-12}\n\n　　　　　　\n\n<a href=\"hello/jupyter.html\" role=\"button\" class=\"btn btn-outline-light\">\n![](images/jupyter-logo.png){width=\"77\"}Jupyter\n</a>\n\n<a href=\"hello/rstudio.html\" role=\"button\" class=\"btn btn-outline-light\">\n![](images/rstudio-logo.png){width=\"77\"}RStudio\n</a>\n\n<a href=\"hello/vscode.html\" role=\"button\" class=\"btn btn-outline-light\">\n![](images/vscode-logo.png){width=\"77\"}VS Code\n</a>\n\n:::\n:::\n\n### 数学公式\n\nQuarto使用LaTeX格式的数学公式。LaTeX数学公式是计算机中最为广泛使用的公式输入格式，大多数文字或文档编辑软件都对LaTeX数学公式提供支持，例如：Word、Jupyter、Matlab等。下面介绍Quarto中数学公式的输入。\n\nLaTeX中数学公式的输入分两种模式：行内模式（\\$ ... \\$）与行间模式\n````markdown\n$$\n...\n$$\n````\n前者是在正文的行文中插入数学公式；后者单独成行，且自动居中。\n\n例如``$E=mc^2$``显示为$E=mc^2$,而\n````markdown\n$$\nE=mc^2\n$$\n````\n则显示为：\n$$\nE=mc^2\n$$\n\n输入带自动编号的公式则需要使用Quarto的交叉引用功能，例如：\n````markdown\n$$\nE=mc^2\n$$ {#eq-einstein}\n\n# 第二个$$和{}间的空格不能少\n````\n显示为：\n$$\nE=mc^2\n$$ {#eq-einstein}\n\n交叉引用功能留待后面小节进行介绍。\n\n### 图片与表格\n\nQuarto的图片及表格插入使用Markdown语法。\n\n#### 插入图片\n\n图片插入请使用'!+[图片名]+(路径/链接)'的形式，支持插入的图片格式包括JPG、PNG、PDF等（不支持SVG），例如：\n````markdown\n![MIT LOGO](images/mit.png){#fig-MIT}\n\n# “{#fig-MIT}”的用处将在后面进行说明\n````\n显示为：\n\n![MIT LOGO](images/mit.png){#fig-MIT}\n\n特别的，针对PDF输出，可在``![]()``后添加``{}``控制输出样式，例如：\n````{markdown}\n![](images/mit.png){fig.pos=\"H\" width=\"50%\" height=\"25%\"}\n````\n代表禁止图片浮动（有时会失效）、图片宽度占PDF页面的50%，高度占页面的25%。\n\n#### 插入表格\n\n例如：\n````markdown\n| 符号  | 说明        | 单位 |\n|-------|-------------|------|\n| $x_i$ | 第$i$次相遇 | 毫厘 |\n| $y_j$ | 第$j$次错过 | 千里 |\n\n: 符号说明 {#tbl-符号说明}\n\n# “: 符号说明” 代表指定表格名称\n# “{#tbl-符号说明}”的用处将在后面进行说明,其与表名间的空格不可省略\n````\n显示为：\n\n| 符号  | 说明        | 单位 |\n|-------|-------------|------|\n| $x_i$ | 第$i$次相遇 | 毫厘 |\n| $y_j$ | 第$j$次错过 | 千里 |\n\n: 符号说明 {#tbl-符号说明}\n\n### 代码块输出\n\n例如：\n\n````markdown\n```{{python}}\n#| label: fig-螺旋\n#| fig-cap: \"A line plot on a polar axis\"\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n# “#| 参数”可以设置代码块运行和输出机制\n````\n显示为：\n\n::: {.cell execution_count=1}\n\n::: {.cell-output-display}\n![螺旋图](index_files\\figure-html/fig--output-1.png){#fig-螺旋 width=443 height=432}\n:::\n:::\n\n\n### 交叉引用\n\n本节介绍Quarto的交叉引用，我们在先前小节的数学公式、图片和表格中分别标记了``{#eq-einstein}``、``{#fig-MIT}``和``{#tbl-符号说明}``，我们可以在文中任何地方引用他们，格式为``[-@...]``，例如：\n````markdown\n[-@tbl-符号说明]\n````\n显示为：[-@tbl-符号说明]\n\n由于我们在上一节中的代码段中添加了标签``#| label: fig-螺旋``，所以我们也可以引用螺旋图[-@fig-螺旋]。\n\n### 数学模板的使用\n\n1. 下载模板文件``cumcm.tex``和范例图片``mit_logo.png``：\n\n::: {.callout-note appearance=\"minimal\"}\n<i class=\"bi bi-journal-code\"></i> [Download cumcm.tex](_cumcm.tex){download=\"cumcm.tex\"}\n:::\n\n::: {.callout-note appearance=\"minimal\"}\n<i class=\"bi bi-file-earmark-image\"></i> [Download mit_logo.png](_mit_logo.png){download=\"mit_logo.png\"}\n:::\n\n2. 下载你的编辑器所对应文件格式：\n\n::: {.callout-note appearance=\"minimal\"}\n<i class=\"bi bi-journal-code\"></i> [Download Jupyter-Demo](_Jupyter-Demo.ipynb){download=\"Jupyter-Demo.ipynb\"}\n:::\n\n::: {.callout-note appearance=\"minimal\"}\n<i class=\"bi bi-journal-code\"></i> [Download RStudio-Demo](_RStudio-Demo.qmd){download=\"RStudio-Demo.qmd\"}\n:::\n\n3. 将下载的三个文件放入同一文件夹中，编译对应文件查看结果。\n\n## 资料与工具\n\n### 资料\n\n[Quato官网](quarto.org)\n\n[一份其实很短的LaTeX入门文档](https://liam.page/2014/09/08/latex-introduction/)\n\n[使用knitr包输出各种类型的LaTeX表格](https://haozhu233.github.io/kableExtra/awesome_table_in_pdf.pdf)\n\n### 工具\n\n[在线LaTeX公式编辑器](https://latexlive.com/home)\n\n[流程图：Draw.io](https://www.draw.io/index.html)\n\n[思维导图：XMind](https://www.xmind.cn/)\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}