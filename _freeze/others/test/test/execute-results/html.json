{
  "hash": "742ec08eb7e70bbdc42c24364ae3da5d",
  "result": {
    "markdown": "---\ntitle: 测试\ntoc: false\n---\n\n### 构造数据\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\ndata = pd.DataFrame({'性别': ['男', '男', '女', '男', '女'],\n                     '年龄': [18, 30, 45, 3, 78],\n                     '年龄区间': ['10-20', '30-40', '40-50', '0-10', '大于70'],\n                     '化验项目：ALP': [10.0, 12.3, np.NaN, 0.6, 8.9],\n                     '化验项目：AT': [11.2, 3.3, np.NaN, 4.1, np.NaN]})\ndata\n```\n\n::: {.cell-output-display execution_count=6}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>性别</th>\n      <th>年龄</th>\n      <th>年龄区间</th>\n      <th>化验项目：ALP</th>\n      <th>化验项目：AT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>男</td>\n      <td>18</td>\n      <td>10-20</td>\n      <td>10.0</td>\n      <td>11.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>男</td>\n      <td>30</td>\n      <td>30-40</td>\n      <td>12.3</td>\n      <td>3.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>女</td>\n      <td>45</td>\n      <td>40-50</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>男</td>\n      <td>3</td>\n      <td>0-10</td>\n      <td>0.6</td>\n      <td>4.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>女</td>\n      <td>78</td>\n      <td>大于70</td>\n      <td>8.9</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 更改列名\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndata.columns=['性别', '年龄', '年龄区间', 'ALP', 'AT']\ndata\n```\n\n::: {.cell-output-display execution_count=7}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>性别</th>\n      <th>年龄</th>\n      <th>年龄区间</th>\n      <th>ALP</th>\n      <th>AT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>男</td>\n      <td>18</td>\n      <td>10-20</td>\n      <td>10.0</td>\n      <td>11.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>男</td>\n      <td>30</td>\n      <td>30-40</td>\n      <td>12.3</td>\n      <td>3.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>女</td>\n      <td>45</td>\n      <td>40-50</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>男</td>\n      <td>3</td>\n      <td>0-10</td>\n      <td>0.6</td>\n      <td>4.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>女</td>\n      <td>78</td>\n      <td>大于70</td>\n      <td>8.9</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 删除年龄区间列\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndel data['年龄区间']\ndata\n```\n\n::: {.cell-output-display execution_count=8}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>性别</th>\n      <th>年龄</th>\n      <th>ALP</th>\n      <th>AT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>男</td>\n      <td>18</td>\n      <td>10.0</td>\n      <td>11.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>男</td>\n      <td>30</td>\n      <td>12.3</td>\n      <td>3.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>女</td>\n      <td>45</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>男</td>\n      <td>3</td>\n      <td>0.6</td>\n      <td>4.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>女</td>\n      <td>78</td>\n      <td>8.9</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 将性别列替换为1和0\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndata.loc[data.性别 == '男', '性别'] = 1\ndata.loc[data.性别 == '女', '性别'] = 0\ndata\n```\n\n::: {.cell-output-display execution_count=9}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>性别</th>\n      <th>年龄</th>\n      <th>ALP</th>\n      <th>AT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>18</td>\n      <td>10.0</td>\n      <td>11.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>30</td>\n      <td>12.3</td>\n      <td>3.3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>45</td>\n      <td>NaN</td>\n      <td>NaN</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>3</td>\n      <td>0.6</td>\n      <td>4.1</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>78</td>\n      <td>8.9</td>\n      <td>NaN</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n### 选出ALP和AT皆不为NA的列\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndata = data[~data.ALP.isna() & ~data.AT.isna()]\ndata\n```\n\n::: {.cell-output-display execution_count=10}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>性别</th>\n      <th>年龄</th>\n      <th>ALP</th>\n      <th>AT</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>18</td>\n      <td>10.0</td>\n      <td>11.2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>30</td>\n      <td>12.3</td>\n      <td>3.3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>1</td>\n      <td>3</td>\n      <td>0.6</td>\n      <td>4.1</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "test_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}